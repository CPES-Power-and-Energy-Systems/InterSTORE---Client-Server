//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.02.25 at 08:56:47 PM CET 
//


package org.ieee._2030;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.XmlValue;
import jakarta.xml.bind.annotation.adapters.HexBinaryAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * Control modes supported by the DER.  Bit positions SHALL be defined as follows:
 *  0 - opModVoltVar (Volt-Var Mode)
 *  1 - opModFreqWatt (Frequency-Watt Curve Mode)
 *  2 - opModFreqDroop (Frequency-Watt Parameterized Mode)
 *  3 - opModWattPF (Watt-PowerFactor Mode)
 *  4 - opModVoltWatt (Volt-Watt Mode)
 *  5 - opModLVRTMomentaryCessation (Low Voltage Ride Through, Momentary Cessation Mode)
 *  6 - opModLVRTMustTrip (Low Voltage Ride Through, Must Trip Mode)
 *  7 - opModHVRTMomentaryCessation (High Voltage Ride Through, Momentary Cessation Mode)
 *  8 - opModHVRTMustTrip (High Voltage Ride Through, Must Trip Mode)
 *  9 - opModLFRTMustTrip (Low Frequency Ride Through, Must Trip Mode)
 *  10 - opModHFRTMustTrip (High Frequency Ride Through, Must Trip Mode)
 *  11 - opModConnect (Connect / Disconnect - implies galvanic isolation)
 *  12 - opModEnergize (Energize / De-Energize)
 *  13 - opModMaxLimW (Maximum Active Power)
 *  14 - opModFixedVar (Reactive Power Setpoint)
 *  15 - opModFixedPF (Fixed Power Factor Setpoint)
 *  16 - opModFixedW (Charge / Discharge Setpoint)
 *  17 - opModTargetW (Target Active Power)
 *  18 - opModTargetVar (Target Reactive Power)
 *  19 - Charge mode
 *  20 - Discharge mode
 *  21 - opModWattVar (Watt-Var Mode)
 * All other values reserved.
 * 
 * <p>Java class for DERControlType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DERControlType"&gt;
 *   &lt;simpleContent&gt;
 *     &lt;extension base="&lt;http://ieee.org/2030.5&gt;HexBinary32"&gt;
 *     &lt;/extension&gt;
 *   &lt;/simpleContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DERControlType", propOrder = {
    "value"
})
public class DERControlType {

    @XmlValue
    @XmlJavaTypeAdapter(HexBinaryAdapter.class)
    protected byte[] value;

    /**
     * A 32-bit field encoded as a hex string (8 hex characters max). Where applicable, bit 0, or the least significant bit, goes on the right. Note that hexBinary requires pairs of hex characters, so an odd number of characters requires a leading "0".
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public byte[] getValue() {
        return value;
    }

    /**
     * Sets the value of the value property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setValue(byte[] value) {
        this.value = value;
    }

}
